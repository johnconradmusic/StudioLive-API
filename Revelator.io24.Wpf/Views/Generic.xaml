<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Presonus.StudioLive32.Wpf" xmlns:converters="clr-namespace:Presonus.StudioLive32.Wpf.Converters"
                    x:Class="Presonus.StudioLive32.Wpf.Views.Generic">

    <ControlTemplate x:Key="WindowControlTemplate1" TargetType="{x:Type Window}">
        <Border 
        Background="{TemplateBinding Background}" 
        BorderBrush="{TemplateBinding BorderBrush}" 
        BorderThickness="{TemplateBinding BorderThickness}"
        >
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="0.93*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="0.21*"/>
                    <ColumnDefinition Width="0.79*"/>
                </Grid.ColumnDefinitions>

                <ContentPresenter 
                Grid.ColumnSpan="2" 
                Grid.Row="1" 
                Content="{TemplateBinding Content}" 
                ContentTemplate="{TemplateBinding ContentTemplate}"
                />
                <ResizeGrip 
                HorizontalAlignment="Right" 
                x:Name="WindowResizeGrip" 
                VerticalAlignment="Bottom" 
                IsTabStop="False" 
                Visibility="Collapsed" 
                Grid.Column="1" 
                Grid.Row="2"
                />
                <TextBlock Text="My Logo" />
                <TextBlock Grid.Column="1" Text="My Title"/>
                <StatusBar Height="30" Grid.ColumnSpan="2" Grid.Row="2" Background="DarkGray" BorderThickness="1" BorderBrush="Gray">
                    <TextBlock AutomationProperties.Name="" x:Name="screenReaderText" Height="20" AutomationProperties.LiveSetting="Assertive" Text="Values"/>
                </StatusBar>
            </Grid>
        </Border>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                    <Condition Property="WindowState" Value="Normal"/>
                </MultiTrigger.Conditions>
                <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Visible"/>
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <converters:AlwaysVisibleConverter x:Key="alwaysVisibleConverter"/>
    <converters:BooleanInverterConverter x:Key="booleanInverterConverter" />
    <Style x:Key="muteButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border HorizontalAlignment="Center" Margin="5" VerticalAlignment="Center" x:Name="border" Padding="5,5,5,5" CornerRadius="2" Background="#FFEAEAEA" BorderBrush="#FF000000" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFC31010"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="soloButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border HorizontalAlignment="Center" Margin="5" VerticalAlignment="Center" x:Name="border" Padding="5,5,5,5" CornerRadius="2" Background="#FFEAEAEA" BorderBrush="#FF000000" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                        <ContentPresenter x:Name="contentPresenter"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FFC3A410"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Slider">
        <Setter Property="Margin" Value="5"/>
        <EventSetter Event="ValueChanged" Handler="Slider_ValueChanged"/>
        <EventSetter Event="GotFocus" Handler="Slider_GotFocus"/>
        <EventSetter Event="PreviewKeyDown" Handler="Slider_PreviewKeyDown"/>
    </Style>
    <Style TargetType="ToggleButton">
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style TargetType="GroupBox">
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style TargetType="CheckBox">
        <Setter Property="Margin" Value="5"/>
    </Style>
</ResourceDictionary>