<Window x:Class="Revelator.io24.Wpf.Mixer"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Revelator.io24.Wpf"
        xmlns:converters="clr-namespace:Revelator.io24.Wpf.Converters"
        xmlns:nm="clr-namespace:NumericUpDownControl"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance Type=local:MainViewModel, IsDesignTimeCreatable=True}" Background="DarkGray"
        Title="Mixer" Height="500" Width="500" Loaded="Window_Loaded" FocusManager.GotFocus="Window_GotFocus">
    <Window.Resources>
        <converters:BooleanInverterConverter x:Key="booleanInverterConverter" />
        <Style x:Key="muteButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border HorizontalAlignment="Center" Margin="5" VerticalAlignment="Center" x:Name="border" Padding="5,5,5,5" CornerRadius="2" Background="#FFEAEAEA" BorderBrush="#FF000000" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFC31010"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="soloButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border HorizontalAlignment="Center" Margin="5" VerticalAlignment="Center" x:Name="border" Padding="5,5,5,5" CornerRadius="2" Background="#FFEAEAEA" BorderBrush="#FF000000" BorderThickness="1,1,1,1" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Background" TargetName="border" Value="#FFC3A410"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="Slider">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="ToggleButton">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="GroupBox">
            <Setter Property="Margin" Value="5"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="5"/>
        </Style>
    </Window.Resources>
    <WrapPanel Background="DarkGray" Margin="5">
        <local:MyList IsTextSearchEnabled="True" TextSearch.TextPath="username" Margin="5" AutomationProperties.Name="Channel Select" x:Name="ChannelList" Height="300" Width="150" ItemsSource="{Binding Path=Device.Channels}" SelectionChanged="ChannelList_SelectionChanged" >
            <local:MyList.ItemTemplate>
                <DataTemplate>
                    <TextBlock AutomationProperties.Name="{Binding username}" Text="{Binding username}"/>
                </DataTemplate>
            </local:MyList.ItemTemplate>
            <local:MyList.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="IsEnabled" Value="{Binding LinkSlave}"/>
                </Style>
            </local:MyList.ItemContainerStyle>
        </local:MyList>

        <StackPanel Orientation="Vertical" Width="60">
            <Slider Minimum="0" Maximum="60" HorizontalAlignment="Center" AutomationProperties.Name="{Binding Path=SelectedChannel.username, StringFormat=\{0\} Trim}" Value="{Binding ElementName=ChannelList, Path=SelectedItem.preampgain}" Orientation="Vertical" Height="30"/>
            <CheckBox AutomationProperties.Name="{Binding ElementName=ChannelList, Path=SelectedItem.username, StringFormat=\{0\} Clip Indicator}" Content="Clip" IsChecked="{Binding ElementName=ChannelList, Path=SelectedItem.clip, Mode=TwoWay, UpdateSourceTrigger=Explicit}"/>
            <ToggleButton AutomationProperties.Name="{Binding ElementName=ChannelList, Path=SelectedItem.username, StringFormat=\{0\} Solo}" Style="{StaticResource soloButton}" IsChecked="{Binding ElementName=ChannelList, Path=SelectedItem.solo}" Content="Solo"/>
            <ToggleButton AutomationProperties.Name="{Binding ElementName=ChannelList, Path=SelectedItem.username, StringFormat=\{0\} Mute}" Style="{StaticResource muteButton}" IsChecked="{Binding ElementName=ChannelList, Path=SelectedItem.mute}" Content="Mute"/>
            <Slider Minimum="-100" Maximum="100" HorizontalAlignment="Center" AutomationProperties.Name="{Binding ElementName=ChannelList, Path=SelectedItem.username, StringFormat=\{0\} Pan}" Value="{Binding ElementName=ChannelList, Path=SelectedItem.pan}" Orientation="Horizontal" Width="40"/>
            <Slider Minimum="-84" Maximum="10" HorizontalAlignment="Center" AutomationProperties.Name="{Binding ElementName=ChannelList, Path=SelectedItem.username, StringFormat=\{0\} Level}" Value="{Binding ElementName=ChannelList, Path=SelectedItem.volume}" Orientation="Vertical" Height="80"/>
            <!--<ProgressBar Orientation="Horizontal" Height="10" Minimum="0" Maximum="1" Value="{Binding Path=SelectedChannel.level_meter, Mode=OneWay}"/>-->
        </StackPanel>
        <StackPanel Margin="5" VerticalAlignment="Center">
            <Button Margin="5" x:Name="channelToolsButton" Content="Channel Tools Panel" Height="30" Width="140" Click="channelToolsButton_Click" />
            <Button Margin="5" x:Name="eqPanelButton" Content="EQ Panel" Height="30" Width="140" Click="eqPanelButton_Click"/>
            <Button Margin="5" x:Name="compPanelButton" Content="Compressor Panel" Height="30" Width="140" Click="compPanelButton_Click"/>
            <Button Margin="5" x:Name="auxPanelButton" Content="Aux Send Panel" Height="30" Width="140" Click="auxPanelButton_Click"/>
        </StackPanel>
        <StatusBar Width="auto" VerticalAlignment="Bottom" Background="DarkGray" BorderThickness="1" BorderBrush="Gray">
            <TextBlock AutomationProperties.Name="" x:Name="screenReaderText" Height="20" AutomationProperties.LiveSetting="Assertive" Text="Values"/>
        </StatusBar>
    </WrapPanel>
</Window>
