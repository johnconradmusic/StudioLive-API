<UserControl x:Class="Presonus.UCNet.Wpf.UserControls.ChannelStrip"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:local="clr-namespace:Presonus.UCNet.Wpf.UserControls"
             xmlns:models="clr-namespace:Presonus.UCNet.Api.Models.Channels;assembly=Presonus.UCNet.Api"
              xmlns:converters="clr-namespace:Presonus.UCNet.Wpf.Converters" 
             xmlns:usercontrols="clr-namespace:Presonus.UCNet.Wpf.UserControls"
             xmlns:enums="clr-namespace:Presonus.UCNet.Api.Enums;assembly=Presonus.UCNet.Api"
             x:Name="channelStrip"
             mc:Ignorable="d"
             d:DataContext="{d:DesignInstance Type=models:MicLineInput}" Margin="2"
             Height="800" Width="80" FocusManager.FocusedElement="{Binding SelectedControl, ElementName=channelStrip}">
    <UserControl.Resources>
        <converters:HexStringToSolidColorBrushConverter x:Key="HexStringToSolidColorBrushConverter"/>
        <converters:VisibilityConverter x:Key="VisibilityConverter"/>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
        <converters:FloatToIndexConverter x:Key="FloatToIndexConverter" x:Shared="False" />
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="2"/>            
        </Style>
    </UserControl.Resources>
    <Border Background="{Binding color, Converter={StaticResource HexStringToSolidColorBrushConverter}}">
        <Grid x:Name="MainContainer" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <StackPanel Grid.Row="0" >
                <usercontrols:ValueDisplay ControlName="{Binding SelectedControl, ElementName=channelStrip}"
                            Value="{Binding SelectedValue, ElementName=channelStrip}" />
                <!-- #region Routing -->
                <local:MiniToggle x:Name="RoutingButton" Caption="Routing" Margin="2"/>
                <StackPanel x:Name="RoutingPanel" Visibility="{Binding IsChecked, ElementName=RoutingButton, Converter={StaticResource BooleanToVisibilityConverter}}" Orientation="Vertical">
                    <ComboBox Visibility="{Binding inputsrc, FallbackValue=Collapsed, Converter={StaticResource VisibilityConverter}}">
                        <ComboBox.ItemsSource>
                            <Binding Path="inputsrc_values" Mode="OneWay"/>
                        </ComboBox.ItemsSource>
                        <ComboBox.SelectedIndex>
                            <MultiBinding Converter="{StaticResource FloatToIndexConverter}">
                                <Binding Path="inputsrc" Mode="TwoWay"/>
                                <Binding Path="inputsrc_values" Mode="OneWay"/>
                            </MultiBinding>
                        </ComboBox.SelectedIndex>
                    </ComboBox>
                    <ComboBox Visibility="{Binding adc_src, FallbackValue=Collapsed, Converter={StaticResource VisibilityConverter}}">
                        <ComboBox.ItemsSource>
                            <Binding Path="adc_src_values" Mode="OneWay"/>
                        </ComboBox.ItemsSource>
                        <ComboBox.SelectedIndex>
                            <MultiBinding Converter="{StaticResource FloatToIndexConverter}">
                                <Binding Path="adc_src" Mode="TwoWay"/>
                                <Binding Path="adc_src_values" Mode="OneWay"/>
                            </MultiBinding>
                        </ComboBox.SelectedIndex>
                    </ComboBox>
                    <ComboBox Visibility="{Binding avb_src, FallbackValue=Collapsed, Converter={StaticResource VisibilityConverter}}">
                        <ComboBox.ItemsSource>
                            <Binding Path="avb_src_values" Mode="OneWay"/>
                        </ComboBox.ItemsSource>
                        <ComboBox.SelectedIndex>
                            <MultiBinding Converter="{StaticResource FloatToIndexConverter}">
                                <Binding Path="avb_src" Mode="TwoWay"/>
                                <Binding Path="avb_src_values" Mode="OneWay"/>
                            </MultiBinding>
                        </ComboBox.SelectedIndex>
                    </ComboBox>
                    <ComboBox Visibility="{Binding usb_src, FallbackValue=Collapsed, Converter={StaticResource VisibilityConverter}}">
                        <ComboBox.ItemsSource>
                            <Binding Path="usb_src_values" Mode="OneWay"/>
                        </ComboBox.ItemsSource>
                        <ComboBox.SelectedIndex>
                            <MultiBinding Converter="{StaticResource FloatToIndexConverter}">
                                <Binding Path="usb_src" Mode="TwoWay"/>
                                <Binding Path="usb_src_values" Mode="OneWay"/>
                            </MultiBinding>
                        </ComboBox.SelectedIndex>
                    </ComboBox>
                    <ComboBox Visibility="{Binding sd_src, FallbackValue=Collapsed, Converter={StaticResource VisibilityConverter}}">
                        <ComboBox.ItemsSource>
                            <Binding Path="sd_src_values" Mode="OneWay"/>
                        </ComboBox.ItemsSource>
                        <ComboBox.SelectedIndex>
                            <MultiBinding Converter="{StaticResource FloatToIndexConverter}">
                                <Binding Path="sd_src" Mode="TwoWay"/>
                                <Binding Path="sd_src_values" Mode="OneWay"/>
                            </MultiBinding>
                        </ComboBox.SelectedIndex>
                    </ComboBox>
                </StackPanel>
                <!-- #endregion -->
                <local:MiniToggle Margin="2" Caption="+48v" Width="auto" Height="20" IsChecked="{Binding phantom, Mode=TwoWay}" Visibility="{Binding phantom, FallbackValue=Collapsed, Converter={StaticResource VisibilityConverter}}"/>
                <local:MiniToggle Margin="2" Caption="⌀" Width="auto" Height="20" IsChecked="{Binding polarity, Mode=TwoWay}" Visibility="{Binding polarity, FallbackValue=Collapsed, Converter={StaticResource VisibilityConverter}}"/>
                <local:RotaryKnobControl  Caption="Gain" Value="{Binding preampgain}" Visibility="{Binding preampgain, FallbackValue=Collapsed, Converter={StaticResource VisibilityConverter}}" Min="0" Max="60"/>
            </StackPanel>
            
            <StackPanel VerticalAlignment="Bottom" Grid.Row="2">
                <local:ToggleButtonControl Margin="2" Caption="Solo" Width="auto" Height="24" IsChecked="{Binding solo, Mode=TwoWay}" CheckedBackground="#FFE8FE6C" CheckedForeground="#FF3C3C3C" />
                <local:ToggleButtonControl Margin="2" Caption="Mute" Width="auto" Height="24" IsChecked="{Binding mute, Mode=TwoWay}" CheckedBackground="#FFC33632" />
                <local:PanPotControl Caption="Pan" Value="{Binding pan}"/>
                <local:MiniToggle Caption="Stereo Link" Visibility="{Binding linkable, Converter={StaticResource BooleanToVisibilityConverter}}" Margin="2" Width="auto" Height="20" IsChecked="{Binding link, Mode=TwoWay}"/>
                <Border HorizontalAlignment="Center" BorderBrush="Black" BorderThickness="1" Margin="2" CornerRadius="4" Background="#FF383838">
                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Bottom" Orientation="Horizontal">
                    <local:FaderControl Caption="Volume" Value="{Binding volume}" Width="50" Height="230"/>
                    </StackPanel>
                </Border>
                <local:ScribbleStripControl  StripColor="{Binding color, FallbackValue=#FF454749, Converter={StaticResource HexStringToSolidColorBrushConverter}}" Text="{Binding username, Mode=TwoWay}"/>
            </StackPanel>
        </Grid>
    </Border>
</UserControl>